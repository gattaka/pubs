<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>pubs</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>PUBs</name>
	<description>Znalostní báze restaurací</description>
	<parent>
		<groupId>cz.gattserver</groupId>
		<artifactId>gattserver-parent</artifactId>
		<version>1.0.6</version>
	</parent>

	<properties>
		<vaadin.version>7.2.1</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>4.0.5.RELEASE</org.springframework.version>
		<org.spring.security.version>3.2.0.RELEASE</org.spring.security.version>
		<spring-data-jpa.version>1.4.1.RELEASE</spring-data-jpa.version>
		<hibernate-validator.version>5.1.1.Final</hibernate-validator.version>
	</properties>

	<scm>
		<connection>${scm.base.url}/pubs</connection>
		<developerConnection>${scm.base.url}/pubs</developerConnection>
		<tag>pubs-1.0.0</tag>
	</scm>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<!-- Web app common -->
		<dependency>
			<groupId>cz.gattserver</groupId>
			<artifactId>web-common</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- Star rating -->
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>ratingstars</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- java-image-scaling -->
		<dependency>
			<groupId>com.mortennobel</groupId>
			<artifactId>java-image-scaling</artifactId>
			<version>0.8.5</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Do WAR se musí přibalit vytvořený VAADIN adresář -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<directory>${basedir}/target/VAADIN</directory>
							<targetPath>VAADIN</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<!-- Používáme Java 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- VAADIN adresář se nesmí během clean fáze mazat, mažeme ho explicitně, 
				je-li to opravdu potřeba, jinak je widgetset vygenerován jednou a napořád -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<filesets>
						<fileset>
							<directory>${basedir}/target</directory>
							<excludes>
								<exclude>VAADIN/**</exclude>
							</excludes>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- VAADIN widgetset init je vynechán aby se nemazal adresář widgetsetu, 
				tak se bude kompilovat opravdu pouze a jenom smaže-li se adresář ručně nebo 
				při vytváření z release, kdy se stahuje z repozitáře projekt bez target -->
			<!-- VAADIN widgetset compile -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<!-- <runTarget>mobilemail</runTarget> -->
					<!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
						way compatible with Vaadin eclipse plugin. -->
					<webappDirectory>${basedir}/target/VAADIN/widgetsets</webappDirectory>
					<hostedWebapp>${basedir}/target/VAADIN/widgetsets
					</hostedWebapp>
					<noServer>true</noServer>
					<!-- Remove draftCompile when project is ready -->
					<draftCompile>false</draftCompile>
					<compileReport>true</compileReport>
					<style>OBF</style>
					<strict>true</strict>
					<runTarget>http://localhost:8080/</runTarget>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
								</modules> -->
						</configuration>
						<goals>
							<goal>resources</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>
											[7.2.1,)
										</versionRange>
										<goals>
											<goal>
												update-widgetset
											</goal>
											<goal>compile</goal>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>